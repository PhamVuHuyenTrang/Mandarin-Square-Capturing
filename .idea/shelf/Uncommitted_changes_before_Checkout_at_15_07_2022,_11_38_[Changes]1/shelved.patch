Index: sourcecode/screen/controller/GamePlayScreenController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sourcecode.screen.controller;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.Initializable;\n\nimport java.net.URISyntaxException;\nimport java.net.URL;\nimport java.util.*;\n\nimport javafx.fxml.FXML;\nimport javafx.scene.Node;\nimport javafx.scene.control.Alert;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.Label;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\nimport javafx.stage.Stage;\nimport sourcecode.board.Board;\nimport sourcecode.board.Cell;\nimport sourcecode.exception.EmptyCellException;\nimport sourcecode.exception.IllegalCellChosen;\nimport sourcecode.player.Player;\n\nimport javafx.scene.image.ImageView;\n\npublic class GamePlayScreenController implements Initializable {\n\tprivate Player player1, player2, currentPlayer;\n\tprivate Board board;\n\tpublic static int cell_Num;\n\tprivate boolean playMusic = false;\n\tprivate Media media;\n\tprivate MediaPlayer mediaPlayer = null;\n\tprivate String winnerPlayer;\n\tprivate int winnerScore;\n\tprivate String endGameContent;\n\n    public GamePlayScreenController(Board board, Player player1, Player player2) {\n        this.player1 = player1;\n        this.player2 = player2;\n        this.board = board;\n    }\n    \n    @FXML\n    private ImageView Mute;\n    \n    @FXML\n    private ImageView unMute;\n    \n    @FXML\n    private Button adjustMusicButton;\n\n\t@FXML\n\tprivate Button btnExit;\n\n\t@FXML\n\tprivate Pane cell01;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow1;\n\n\t@FXML\n\tprivate ImageView imgRightArrow1;\n\n\t@FXML\n\tprivate Label numOfGems1;\n\n\t@FXML\n\tprivate Button leftArrowCell1;\n\n\t@FXML\n\tprivate Button rightArrowCell1;\n\n\t@FXML\n\tprivate Pane cell02;\n\n\t@FXML\n\tprivate Label numOfGems2;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow2;\n\n\t@FXML\n\tprivate ImageView imgRightArrow2;\n\n\t@FXML\n\tprivate Button rightArrowCell2;\n\n\t@FXML\n\tprivate Button leftArrowCell2;\n\n\t@FXML\n\tprivate Pane cell03;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow3;\n\n\t@FXML\n\tprivate ImageView imgRightArrow3;\n\n\t@FXML\n\tprivate Label numOfGems3;\n\n\t@FXML\n\tprivate Button leftArrowCell3;\n\n\t@FXML\n\tprivate Button rightArrowCell3;\n\n\t@FXML\n\tprivate Pane cell04;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow4;\n\n\t@FXML\n\tprivate ImageView imgRightArrow4;\n\n\t@FXML\n\tprivate Label numOfGems4;\n\n\t@FXML\n\tprivate Button leftArrowCell4;\n\n\t@FXML\n\tprivate Button rightArrowCell4;\n\n\t@FXML\n\tprivate Pane cell05;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow5;\n\n\t@FXML\n\tprivate ImageView imgRightArrow5;\n\n\t@FXML\n\tprivate Label numOfGems5;\n\n\t@FXML\n\tprivate Button leftArrowCell5;\n\n\t@FXML\n\tprivate Button rightArrowCell5;\n\n\t@FXML\n\tprivate Pane cell07;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow7;\n\n\t@FXML\n\tprivate ImageView imgRightArrow7;\n\n\t@FXML\n\tprivate Label numOfGems7;\n\n\t@FXML\n\tprivate Button rightArrowCell7;\n\n\t@FXML\n\tprivate Button leftArrowCell7;\n\n\t@FXML\n\tprivate Pane cell08;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow8;\n\n\t@FXML\n\tprivate ImageView imgRightArrow8;\n\n\t@FXML\n\tprivate Label numOfGems8;\n\n\t@FXML\n\tprivate Button leftArrowCell8;\n\n\t@FXML\n\tprivate Button rightArrowCell8;\n\n\t@FXML\n\tprivate Pane cell09;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow9;\n\n\t@FXML\n\tprivate ImageView imgRightArrow9;\n\n\t@FXML\n\tprivate Label numOfGems9;\n\n\t@FXML\n\tprivate Button leftArrowCell9;\n\n\t@FXML\n\tprivate Button rightArrowCell9;\n\n\t@FXML\n\tprivate Pane cell10;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow10;\n\n\t@FXML\n\tprivate ImageView imgRightArrow10;\n\n\t@FXML\n\tprivate Label numOfGems10;\n\n\t@FXML\n\tprivate Button leftArrowCell10;\n\n\t@FXML\n\tprivate Button rightArrowCell10;\n\n\t@FXML\n\tprivate Pane cell11;\n\n\t@FXML\n\tprivate Label numOfGems11;\n\n\t@FXML\n\tprivate ImageView imgRightArrow11;\n\n\t@FXML\n\tprivate ImageView imgLeftArrow11;\n\n\t@FXML\n\tprivate Button leftArrowCell11;\n\n\t@FXML\n\tprivate Button rightArrowCell11;\n\n\t@FXML\n\tprivate Label numOfGems0;\n\n\t@FXML\n\tprivate Label numOfGems6;\n\n\t@FXML\n\tprivate Label player1Name;\n\n\t@FXML\n\tprivate Label player2Name;\n\n\t@FXML\n\tprivate Label player1Score;\n\n\t@FXML\n\tprivate Label player2Score;\n\n\t@FXML\n\tprivate ImageView player1Badge;\n\n\t@FXML\n\tprivate ImageView player2Badge;\n\n\t@FXML\n\tvoid btnExitClicked(ActionEvent event) {\n\t\tAlert alert = new Alert(Alert.AlertType.CONFIRMATION);\n\t\talert.setTitle(\"Exit Confirmation\");\n\t\talert.setHeaderText(\"Exit Game\");\n\t\talert.setContentText(\"Are you sure you want to exit?\");\n\t\tOptional<ButtonType> res = alert.showAndWait();\n\t\tif(res.get() == ButtonType.OK) {\n\t\t\t// quit game\n\t\t\tStage stage = (Stage) btnExit.getScene().getWindow();\n\t\t\tstage.close();\n\t\t} else {\n\t\t\t// close dialog\n\t\t\talert.close();\n\t\t}\n\n\t}\n\n\t@Override\n\tpublic void initialize(URL location, ResourceBundle resources) {\n\t\t// TODO\n\t\tplayer1.setTurn((Math.random()) < 0.5);\n\t\tif (player1.isInTurn()) {\n\t\t\tplayer2.setTurn(false);\n\t\t    for(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05)) {\n\t\t\t    pane.setDisable(false);\n\t\t\t\t}\n\t\t    for(Pane pane : Arrays.asList(cell07, cell08, cell09, cell10, cell11)) {\n\t\t\t    pane.setDisable(true);\n\t\t\t\t}\n\t\t\t\tplayer1Badge.setVisible(true);\n\t\t\t\tplayer2Badge.setVisible(false);\n\t\t}else {\n\t\t\tplayer2.setTurn(true);\n\t\t    for(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05)) {\n\t\t\t    pane.setDisable(true);\n\t\t\t\t}\n\t\t    for(Pane pane : Arrays.asList(cell07, cell08, cell09, cell10, cell11)) {\n\t\t\t    pane.setDisable(false);\n\t\t\t\t}\n\t\t\t\tplayer1Badge.setVisible(false);\n\t\t\t\tplayer2Badge.setVisible(true);\n\t\t}\n\t    try {\n\t          this.media = new Media(getClass().getResource(\"/sourcecode/screen/music/gameMusic.mp3\").toURI().toString());\n\t        } catch (URISyntaxException e) {\n\t            // TODO Auto-generated catch block\n\t            e.printStackTrace();\n\t        }\n\t        this.mediaPlayer = new MediaPlayer(this.media);\n\t\t\t\n\t\t\n\t    ArrayList <Cell> Player1CellOnSide = new ArrayList<Cell>();\n\t    ArrayList <Cell> Player2CellOnSide = new ArrayList<Cell>();\n\t    Cell[] boardList = board.getBoard();\n\t    for (int i = 1; i < 6; i ++) { \n\t        Player1CellOnSide.add(boardList[i]);\n\t     }\n\t    for (int i = 7; i < 12; i ++) {\n\t        Player2CellOnSide.add(boardList[i]);\n\t     }\n\t    player1.setCellsOnSide(Player1CellOnSide);\n\t    player2.setCellsOnSide(Player2CellOnSide);\n\t\t\n\t}\n\n    @FXML\n    void cellChosen(MouseEvent event) {\n\t\tPane paneChosen = (Pane) event.getPickResult().getIntersectedNode();\n\t\tObservableList<Node> childrenElements = paneChosen.getChildren();\n\n\t\tString id = paneChosen.getId();\n\t\tcell_Num = Integer.parseInt(id.substring(id.length()-2));\n\t\tSystem.out.println(cell_Num);\n\n\t\t// set invisible for all arrows and its button\n\t\tfor(ImageView imageView : Arrays.asList(imgLeftArrow1, imgLeftArrow2, imgLeftArrow3, imgLeftArrow4, imgLeftArrow5,\n\t\t\t\timgLeftArrow7, imgLeftArrow8, imgLeftArrow9, imgLeftArrow10, imgLeftArrow11,\n\t\t\t\timgRightArrow1, imgRightArrow2, imgRightArrow3, imgRightArrow4, imgRightArrow5,\n\t\t\t\timgRightArrow7, imgRightArrow8, imgRightArrow9, imgRightArrow10, imgRightArrow11)) {\n\t\t\timageView.setVisible(false);\n\t\t}\n\n\t\tfor(Button arrowButton : Arrays.asList(leftArrowCell1, leftArrowCell2, leftArrowCell3, leftArrowCell4, leftArrowCell5,\n\t\t\t\tleftArrowCell7, leftArrowCell8, leftArrowCell9, leftArrowCell10, leftArrowCell11, rightArrowCell1, rightArrowCell2,\n\t\t\t\trightArrowCell3, rightArrowCell4, rightArrowCell5, rightArrowCell7, rightArrowCell8, rightArrowCell9, rightArrowCell10, rightArrowCell11)) {\n\t\t\tarrowButton.setVisible(false);\n\t\t}\n\n\t\tfor(Node node:childrenElements) {\n\t\t\tnode.setVisible(true);\n\t\t}\n    }\n\n    @FXML\n    void leftDirectionChosen(ActionEvent event) {\n    \tSystem.out.println(player1.isInTurn());\n\t\tPane paneChosen = (Pane) ((Node) event.getTarget()).getParent();\n\t\tSystem.out.println(\"pane chosen: \" + paneChosen);\n\t\tString id = paneChosen.getId();\n\t\tint index = Integer.parseInt(id.substring(id.length()-2));\n\n\t\tCell[] boardList = this.board.getBoard();\n        if(this.player1.isInTurn()) {\n\t\t\tthis.currentPlayer = this.player1;\n\t\t} else {\n\t\t\tthis.currentPlayer = this.player2;\n\t\t}\n\n\t\tif(index >= 1 && index <= 5) {\n\t\t\tcurrentPlayer.pickUpGemFrom(boardList[index]);\n\t\t\tcurrentPlayer.spreadGem(boardList[index], 1, this.board);\n\t\t\tsetNumGems(boardList);\n\t\t\tsetScore();\n\t\t}\n\n\t\tif(index >= 7 && index <= 11) {\n\t\t\tcurrentPlayer.pickUpGemFrom(boardList[index]);\n\t\t\tcurrentPlayer.spreadGem(boardList[index], 0, this.board);\n\t\t\tsetNumGems(boardList);\n\t\t\tsetScore();\n\t\t}\t\n\t\tif (!(isGameOver(this.player1, this.player2, this.board))) {\n\t\t\tchangeTurn();\n\t\t}else {\n\t\t\tfor(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05, cell07, cell08,  cell09, cell10, cell11)) {\n\t\t\t\tpane.setDisable(true);\n\t\t\t}\n\t\t}\n\n    }\n\n    @FXML\n    void rightDirectionChosen(ActionEvent event) {\n\t\tPane paneChosen = (Pane) ((Node) event.getTarget()).getParent();\n\t\tSystem.out.println(\"pane chosen: \" + paneChosen);\n\t\tString id = paneChosen.getId();\n\t\tint index = Integer.parseInt(id.substring(id.length()-2));\n\n\t\tCell[] boardList = this.board.getBoard();\n\n\t\tif(this.player1.isInTurn()) {\n\t\t\tthis.currentPlayer = this.player1;\n\t\t} else {\n\t\t\tthis.currentPlayer = this.player2;\n\t\t}\n\n\t\tif(index >= 1 && index <= 5) {\n\t\t\tcurrentPlayer.pickUpGemFrom(boardList[index]);\n\t\t\tcurrentPlayer.spreadGem(boardList[index], 0, this.board);\n\t\t\tsetNumGems(boardList);\n\t\t\tsetScore();\n\t\t}\n\n\t\tif(index >= 7 && index <= 11) {\n\t\t\tcurrentPlayer.pickUpGemFrom(boardList[index]);\n\t\t\tcurrentPlayer.spreadGem(boardList[index], 1, this.board);\n\t\t\tsetNumGems(boardList);\n\t\t\tsetScore();\n\t\t}\n\t\t\n\t\tif (!(isGameOver(this.player1, this.player2, this.board))) {\n\t\t\tchangeTurn();\n\n\t\t}else {\n\t\t\tfor(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05, cell07, cell08,  cell09, cell10, cell11)) {\n\t\t\t\tpane.setDisable(true);\n\t\t\t}\n\t\t}\n\t   \tSystem.out.println(player1.isInTurn());\n    }\n    \n    public void setNumGems(Cell[] boardList) {\n  \t    numOfGems0.setText(\"\" + boardList[0].getGemList().size());\n    \tnumOfGems1.setText(\"\" + boardList[1].getGemList().size());\n    \tnumOfGems2.setText(\"\" + boardList[2].getGemList().size());\n    \tnumOfGems3.setText(\"\" + boardList[3].getGemList().size());\n    \tnumOfGems4.setText(\"\" + boardList[4].getGemList().size());\n    \tnumOfGems5.setText(\"\" + boardList[5].getGemList().size());\n    \tnumOfGems6.setText(\"\" + boardList[6].getGemList().size());\n    \tnumOfGems7.setText(\"\" + boardList[7].getGemList().size());\n    \tnumOfGems8.setText(\"\" + boardList[8].getGemList().size());\n    \tnumOfGems9.setText(\"\" + boardList[9].getGemList().size());\n    \tnumOfGems10.setText(\"\" + boardList[10].getGemList().size());\n    \tnumOfGems11.setText(\"\" + boardList[11].getGemList().size());\n    \t\n    }\n    \n    public void setScore() {\n    \tplayer1Score.setText(\"\" + this.player1.calculateScore());\n    \tplayer2Score.setText(\"\" + this.player2.calculateScore());\n    }\n\n\tpublic boolean isGameOver(Player player1, Player player2, Board board) {\n\t\tboolean res = false;\n\t\tif (board.getNumBigGem() - player1.numBigGemsInGemsCaptured() - player2.numBigGemsInGemsCaptured() == 0) {\n\t\t\tres = true;\n\t\t}else if (player1.isCellOnSideEmpty()) {\n\t\t\tres = true;\n\t\t}else if (player2.isCellOnSideEmpty()) {\n\t\t\tres = true;\n\t\t}\n\n\t\tif(res) {\n\t\t\tSystem.out.println(\"Game finished\");\n\t\t\tif(player1.calculateScore() > player2.calculateScore()) {\n\t\t\t\tthis.winnerPlayer = player1.getName();\n\t\t\t\tthis.winnerScore = player1.calculateScore();\n\t\t\t\tthis.endGameContent = winnerPlayer + \" wins! Score: \" + winnerScore;\n\t\t\t}\n\t\t\telse if(player1.calculateScore() < player2.calculateScore()){\n\t\t\t\tthis.winnerPlayer = player2.getName();\n\t\t\t\tthis.winnerScore = player2.calculateScore();\n\t\t\t\tthis.endGameContent = winnerPlayer + \" wins! Score: \" + winnerScore;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.endGameContent = \"Draw\";\n\t\t\t}\n\t\t\tdisplayEndGameScreen();\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tpublic void displayEndGameScreen() {\n\t\tAlert alert = new Alert(Alert.AlertType.INFORMATION);\n\t\talert.setTitle(\"End Game\");\n\t\talert.setHeaderText(\"End Game\");\n\t\talert.setContentText(endGameContent);\n\t\tOptional<ButtonType> res = alert.showAndWait();\n\t\tif(res.get() == ButtonType.OK) {\n\t\t\t// quit game\n\t\t\tStage stage = (Stage) btnExit.getScene().getWindow();\n\t\t\tstage.close();\n\t\t} else {\n\t\t\t// close dialog\n\t\t\talert.close();\n\t\t}\n\n\t}\n\t\n\tpublic void changeTurn() {\n\t\tif (this.currentPlayer == this.player1) {\n\t\t\tthis.player1.setTurn(false);\n\t\t\tthis.player2.setTurn(true);\n\t\t\tfor(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05)) {\n\t\t\t\tpane.setDisable(true);\n\t\t\t}\n\t\t\tfor(Pane pane : Arrays.asList(cell07, cell08, cell09, cell10, cell11)) {\n\t\t\t\tif (!(isPaneEmpty(pane))) {\n\t\t\t\t\tpane.setDisable(false);\n\t\t\t\t}else {\n\t\t\t\t\tpane.setDisable(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tplayer1Badge.setVisible(false);\n\t\t\tplayer2Badge.setVisible(true);\n\t\t}else {\n\t\t\tthis.player1.setTurn(true);\n\t\t\tthis.player2.setTurn(false);\n\t\t\tfor(Pane pane : Arrays.asList(cell01, cell02, cell03, cell04, cell05)) {\n\t\t\t\tif (!(isPaneEmpty(pane))) {\n\t\t\t\t\tpane.setDisable(false);\n\t\t\t\t}else {\n\t\t\t\t\tpane.setDisable(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(Pane pane : Arrays.asList(cell07, cell08, cell09, cell10, cell11)) {\n\t\t\t\tpane.setDisable(true);\n\t\t\t}\n\t\t\tplayer1Badge.setVisible(true);\n\t\t\tplayer2Badge.setVisible(false);\n\t\t}\n\t}\n\tpublic static boolean isPaneEmpty(Pane pane) {\n\t    boolean empty = false;\n\t\tfor (Node n : pane.getChildren()) {\n\t\t    if (n instanceof Label) {\n\t\t        String text = ((Label)n).getText();\n\t\t        if (text.equals(\"\" + '0')) {\n\t\t\t    empty = true;\n\t\t\t    break;\n\t\t\t    }\n            }\n\t\t}\n\t\treturn empty;\n    }\n\t\n    @FXML\n    void adjustMusic(MouseEvent event) {\n\t\tif (this.playMusic) {\n\t\t\tthis.playMusic = false;\n\t        Mute.setVisible(false);\n\t        unMute.setVisible(true);\n\t    }else {\n\t        this.playMusic = true;\n\t        Mute.setVisible(true);\n\t        unMute.setVisible(false);\n\t        }\n\t    if (this.playMusic) {\n\t        this.mediaPlayer.play();\n\t    }else {\n\t        this.mediaPlayer.stop();\n\t    }\n\n    }\n\n}\n \n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sourcecode/screen/controller/GamePlayScreenController.java b/sourcecode/screen/controller/GamePlayScreenController.java
--- a/sourcecode/screen/controller/GamePlayScreenController.java	
+++ b/sourcecode/screen/controller/GamePlayScreenController.java	
@@ -20,8 +20,6 @@
 import javafx.stage.Stage;
 import sourcecode.board.Board;
 import sourcecode.board.Cell;
-import sourcecode.exception.EmptyCellException;
-import sourcecode.exception.IllegalCellChosen;
 import sourcecode.player.Player;
 
 import javafx.scene.image.ImageView;
Index: sourcecode/exception/EmptyCellException.java
===================================================================
diff --git a/sourcecode/exception/EmptyCellException.java b/sourcecode/exception/EmptyCellException.java
deleted file mode 100644
--- a/sourcecode/exception/EmptyCellException.java	
+++ /dev/null	
@@ -1,22 +0,0 @@
-package sourcecode.exception;
-
-public class EmptyCellException extends Exception {
-    public EmptyCellException() {
-    }
-
-    public EmptyCellException(String message) {
-        super(message);
-    }
-
-    public EmptyCellException(String message, Throwable cause) {
-        super(message, cause);
-    }
-
-    public EmptyCellException(Throwable cause) {
-        super(cause);
-    }
-
-    public EmptyCellException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
-        super(message, cause, enableSuppression, writableStackTrace);
-    }
-}
Index: sourcecode/exception/IllegalCellChosen.java
===================================================================
diff --git a/sourcecode/exception/IllegalCellChosen.java b/sourcecode/exception/IllegalCellChosen.java
deleted file mode 100644
--- a/sourcecode/exception/IllegalCellChosen.java	
+++ /dev/null	
@@ -1,22 +0,0 @@
-package sourcecode.exception;
-
-public class IllegalCellChosen extends Exception {
-    public IllegalCellChosen() {
-    }
-
-    public IllegalCellChosen(String message) {
-        super(message);
-    }
-
-    public IllegalCellChosen(String message, Throwable cause) {
-        super(message, cause);
-    }
-
-    public IllegalCellChosen(Throwable cause) {
-        super(cause);
-    }
-
-    public IllegalCellChosen(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
-        super(message, cause, enableSuppression, writableStackTrace);
-    }
-}
