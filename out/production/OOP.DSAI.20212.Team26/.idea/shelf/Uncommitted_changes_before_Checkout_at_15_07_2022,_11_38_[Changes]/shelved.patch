Index: sourcecode/test/GamePlay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sourcecode.test;\nimport java.util.Scanner;\n\nimport sourcecode.board.Board;\nimport sourcecode.board.Cell;\nimport sourcecode.exception.IllegalCellChosen;\nimport sourcecode.player.Player;\nimport java.util.ArrayList;\npublic class GamePlay {\n    private static Scanner sc = new Scanner(System.in);\n    public static void main(String[] args) {\n        Board board = new Board();\n        Player Player1 = new Player(\"Player 1\");\n        Player Player2 = new Player(\"Player 2\");\n\n        // TODO Add Introduction and rules here\n        System.out.println(\"Introduction\");\n        Player1.setTurn((Math.random()) < 0.5);\n        if (Player1.isInTurn()){\n        \tSystem.out.println(\"Player 1 plays first\");\n            GameStart(Player1, Player2, board);\n        } else {\n            GameStart(Player2, Player1, board);\n            System.out.println(\"Player 2 plays first\");\n        }\n    }\n    public static boolean isGameOver(Player player1, Player player2, Board board) {\n    \tboolean res = false;\n    \tif (board.getNumBigGem() - player1.numBigGemsInGemsCaptured() - player2.numBigGemsInGemsCaptured() == 0) {\n    \t\tres = true;\n    \t}else if (player1.isCellOnSideEmpty()) {\n    \t\tres = true;\n    \t}else if (player2.isCellOnSideEmpty()) {\n    \t\tres = true;\n    \t}\n    \treturn res;\n    }\n    public static void GameStart(Player player1, Player player2, Board board){\n        ArrayList <Cell> Player1CellOnSide = new ArrayList<Cell>();\n        ArrayList <Cell> Player2CellOnSide = new ArrayList<Cell>();\n        Cell[] boardList = board.getBoard();\n        for (int i = 1; i < 6; i ++) { \n            Player1CellOnSide.add(boardList[i]);\n        }\n        for (int i = 7; i < 12; i ++) {\n            Player2CellOnSide.add(boardList[i]);\n        }\n        player1.setCellsOnSide(Player1CellOnSide);\n        player2.setCellsOnSide(Player2CellOnSide);\n\n        while (!(isGameOver(player1, player2, board))) {\n        \tSystem.out.println(\"********************************************\");\n        \tSystem.out.println(\"Player 1's turn\");\n        \tSystem.out.println(\"Player 1 chooses a cell to pick gems from: \");\n        \tint cell_Num = sc.nextInt();\n        \tsc.nextLine();\n            while (true){\n                if (!!(player1.pickUpGemFrom(boardList[cell_Num]))) break;\n                System.out.println(\"The cell is invalid. Please choose another cell to pick!\");\n                cell_Num = sc.nextInt();\n                sc.nextLine();\n            }\n            System.out.println(\"Player 1 chooses Hand Direction\");\n            int Player1HandDirection = sc.nextInt();\n            sc.nextLine();\n            while (Player1HandDirection != 1 && Player1HandDirection != 0) {\n                System.out.println(\"Invalid Hand Direction. Please choose again!\");\n                Player1HandDirection = sc.nextInt();\n            }\n            player1.spreadGem(boardList[cell_Num], Player1HandDirection, board);\n            System.out.println(\"*****************************************\");\n            System.out.println(\"Player 2's turn\");\n            System.out.println(\"Player 2 chooses a cell to pick gems from: \");\n            int cell_Num2 = sc.nextInt();\n            sc.nextLine();\n            while(true){\n                if (!!player2.pickUpGemFrom(boardList[cell_Num2] )) break;\n                System.out.println(\"The cell is invalid. Please choose another cell to pick!\");\n                cell_Num2 = sc.nextInt();\n                }\n            player2.pickUpGemFrom(boardList[cell_Num2]);\n            System.out.println(\"Player 2 chooses Hand Direction\");\n            int Player2HandDirection = sc.nextInt();\n            while (Player2HandDirection != 1 && Player2HandDirection != 0) {\n                System.out.println(\"Invalid Hand Direction. Please choose again!\");\n                Player2HandDirection = sc.nextInt();\n                sc.nextInt();\n            }\n            player2.spreadGem(boardList[cell_Num2], Player2HandDirection, board);\n   \n        }\n        if (player1.calculateScore() > player2.calculateScore()) {\n            System.out.println(player1.getName() + \" wins.\");\n            System.out.println(\"Player 1's score is: \" + player1.calculateScore());\n            System.out.println(\"Player 2's score is: \" + player2.calculateScore());\n        } else if (player1.calculateScore() < player2.calculateScore()) {\n            System.out.println(player2.getName() + \" wins.\");\n            System.out.println(\"Player 1's score is: \" + player1.calculateScore());\n            System.out.println(\"Player 2's score is: \" + player2.calculateScore());\n        } else {\n            System.out.println(\"Draw\");\n            System.out.println(\"The score of two players is: \" + player1.calculateScore());\n        }\n        System.exit(0);\n\n    }\n}
===================================================================
diff --git a/sourcecode/test/GamePlay.java b/sourcecode/test/GamePlay.java
--- a/sourcecode/test/GamePlay.java	
+++ b/sourcecode/test/GamePlay.java	
@@ -3,7 +3,6 @@
 
 import sourcecode.board.Board;
 import sourcecode.board.Cell;
-import sourcecode.exception.IllegalCellChosen;
 import sourcecode.player.Player;
 import java.util.ArrayList;
 public class GamePlay {
